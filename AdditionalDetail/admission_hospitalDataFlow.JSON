{
    "name": "hospital_Admissions",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "ds_hospital_admission",
                        "type": "DatasetReference"
                    },
                    "name": "SourceAsHospitalAdmission"
                },
                {
                    "dataset": {
                        "referenceName": "country_lookup",
                        "type": "DatasetReference"
                    },
                    "name": "CountrySource"
                },
                {
                    "dataset": {
                        "referenceName": "ds_dimdate",
                        "type": "DatasetReference"
                    },
                    "name": "DimDateSource"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "ds_hospitaladmission_weeklytransformeddata",
                        "type": "DatasetReference"
                    },
                    "name": "WeeklySink"
                },
                {
                    "dataset": {
                        "referenceName": "ds_hospitaladmission_dailytransformeddata",
                        "type": "DatasetReference"
                    },
                    "name": "DailySink"
                }
            ],
            "transformations": [
                {
                    "name": "selectRequiredFields"
                },
                {
                    "name": "LookUpCountry"
                },
                {
                    "name": "SelectSpecificColumns"
                },
                {
                    "name": "ConditionalSplit1"
                },
                {
                    "name": "AggregateDimDate"
                },
                {
                    "name": "DerivedColumnDimDate"
                },
                {
                    "name": "JoinWithDate"
                },
                {
                    "name": "pivotWeekly"
                },
                {
                    "name": "pivot1"
                },
                {
                    "name": "sortWeekly"
                },
                {
                    "name": "sortDaily"
                },
                {
                    "name": "selectWeekly"
                },
                {
                    "name": "selectDaily"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          country as string,",
                "          indicator as string,",
                "          date as date,",
                "          year_week as string,",
                "          value as double,",
                "          source as string,",
                "          url as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> SourceAsHospitalAdmission",
                "source(output(",
                "          country as string,",
                "          country_code_2_digit as string,",
                "          country_code_3_digit as string,",
                "          continent as string,",
                "          population as integer",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> CountrySource",
                "source(output(",
                "          date_key as string,",
                "          date as string,",
                "          year as string,",
                "          month as string,",
                "          day as string,",
                "          day_name as string,",
                "          day_of_year as string,",
                "          week_of_month as string,",
                "          week_of_year as string,",
                "          month_name as string,",
                "          year_month as string,",
                "          year_week as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> DimDateSource",
                "SourceAsHospitalAdmission select(mapColumn(",
                "          country,",
                "          indicator,",
                "          reported_date = date,",
                "          reported_year_week = year_week,",
                "          value,",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
                "selectRequiredFields, CountrySource lookup(selectRequiredFields@country == CountrySource@country,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> LookUpCountry",
                "LookUpCountry select(mapColumn(",
                "          country = selectRequiredFields@country,",
                "          indicator,",
                "          reported_date,",
                "          reported_year_week,",
                "          value,",
                "          source,",
                "          country = CountrySource@country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectSpecificColumns",
                "SelectSpecificColumns split(indicator=='Weekly new hospital admissions per 100k'||indicator=='Weekly new ICU admissions per 100k',",
                "     disjoint: false) ~> ConditionalSplit1@(Weekly, Daily)",
                "DerivedColumnDimDate aggregate(groupBy(report_year_week),",
                "     week_start_date = min(date),",
                "          week_end_date = max(date)) ~> AggregateDimDate",
                "DimDateSource derive(report_year_week = year+'-W'+lpad(week_of_year, 2, '0')) ~> DerivedColumnDimDate",
                "ConditionalSplit1@Weekly, AggregateDimDate join(reported_year_week == report_year_week,",
                "     joinType:'inner',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> JoinWithDate",
                "JoinWithDate pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_year_week,",
                "          week_start_date,",
                "          week_end_date,",
                "          source),",
                "     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
                "     count = sum(value),",
                "     columnNaming: '$V_$N',",
                "     lateral: true) ~> pivotWeekly",
                "ConditionalSplit1@Daily pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_date,",
                "          source),",
                "     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
                "     count = sum(value),",
                "     columnNaming: '$V_$N',",
                "     lateral: true) ~> pivot1",
                "pivotWeekly sort(desc(reported_year_week, true),",
                "     asc(country, true)) ~> sortWeekly",
                "pivot1 sort(desc(reported_date, true),",
                "     asc(country, true)) ~> sortDaily",
                "sortWeekly select(mapColumn(",
                "          country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_year_week,",
                "          reported_week_start_date = week_start_date,",
                "          reported_week_end_date = week_end_date,",
                "          new_Occupancy_count = {Weekly new hospital admissions per 100k_count},",
                "          new_ICU_count = {Weekly new ICU admissions per 100k_count},",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> selectWeekly",
                "sortDaily select(mapColumn(",
                "          country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_date,",
                "          {hospital occupancy_count} = {Daily hospital occupancy_count},",
                "          ICU_occupancy_count = {Daily ICU occupancy_count},",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> selectDaily",
                "selectWeekly sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     partitionFileNames:['hospitalAdmission_weeklydata.csv'],",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     partitionBy('hash', 1)) ~> WeeklySink",
                "selectDaily sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     partitionFileNames:['hospitalAdmission_dailydata.csv'],",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     partitionBy('hash', 1)) ~> DailySink"
            ]
        }
    }
}